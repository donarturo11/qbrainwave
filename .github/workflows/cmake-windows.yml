name: Build Windows

on:
  push:
    branches:
       - main
       - 0000-fix-workflows
  pull_request:
    branches: [ main ]

env:
  #  Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  TIME: 0000

jobs:
  build-windows:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Setup Base MINGW env
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true

    - name: Setup MINGW Environment
      run: |

           TIME=$(date +%Y%d%m-%H%M%S)
           MINGW_ROOT="/$(cd /; pwd -W | sed 's/[A-Z]/\L&/g' | sed "s/://g")"
           echo "MINGW_ROOT=${MINGW_ROOT}" >> $GITHUB_ENV
           echo "MINGW_WORKSPACE=$(cygpath -m "${{github.workspace}}")" >> $GITHUB_ENV
           [[ -x /d/artifacts ]]
           mkdir /d/artifacts
           
    - name: Print MINGW env vars
      run: |

           echo "MINGW_ROOT = ${{env.MINGW_ROOT}}"
           echo "github.workspace=${{github.workspace}}"
           echo "MINGW_WORKSPACE=${{env.MINGW_WORKSPACE}}"
           echo "CYG HOME="
           
    - name: Setup MinGW Build environment
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: base base-devel tree autoconf automake-wrapper dos2unix zip git mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake mingw-w64-x86_64-pcre
    
    - name: Git checkout
      uses: actions/checkout@v3
      
    - name: Install qt6
      uses: msys2/setup-msys2@v2
      with:
         msystem: MINGW64
         install: mingw-w64-x86_64-qt6

    - name: Build qbrainwave
      # Build your program with the given configuration
      run: |
           [[ /d/artifacts ]]; find ${MINGW_WORKSPACE} > /d/artifacts/mingw-git-workspace.txt
           cd ${{github.workspace}}
           cmake \
              -B ${MINGW_WORKSPACE/build} \
              -S ${MINGW_WORKSPACE} \
              -G "Unix Makefiles" \
              -DCMAKE_INSTALL_PREFIX=/d/artifacts/qbrainwave-win \
              -DCMAKE_CXX_FLAGS="-static -L /mingw64/lib/"
           cmake --build ${MINGW_GIT_WORKSPACE/build}
    
    - name: Package qbrainwave
      run: |
           cmake --install ${MINGW_WORKSPACE/build} --prefix /d/artifacts/qbrainwave-win

    - name: Add timestamp
      run: |
           cd /d/artifacts/
           TIME=$(date +%Y%m%d-%H%M%S || echo "latest")
           echo "TIME=$TIME" >> $GITHUB_ENV
           mv qbrainwave-win qbrainwave-win-$TIME

    - name: Upload qbrainwave-win-${{ env.TIME }}.zip
      uses: actions/upload-artifact@v3.0.0
      with:
        name: qbrainwave-win-${{ env.TIME }}
        path: D:\artifacts\
