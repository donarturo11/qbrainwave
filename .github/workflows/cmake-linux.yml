name: Build Linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  TIME: 00000000-000000

jobs:
  build-linux:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Configure environment
      run: |
           echo "HOME=$HOME" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
           sudo apt-get update
           sudo apt-get install -y cmake-extras zip libegl1-mesa-dev libfuse2
           sudo apt-get install -y qt6*
          
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build \
                  -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                  -DCMAKE_INSTALL_PREFIX=${HOME}/qbrainwave-app/
                  
    - name: Build
      # Build your program with the given configuration
      run: |
          echo ${{github.workspace}}
          echo ":: BUILD ::"
          cmake --build ${{github.workspace}}/build
          echo ":: Install ::"
          cmake --install ${{github.workspace}}/build --prefix ~/qbrainwave-app/usr

    - name: Build Package
      run: |
           cd ${{github.workspace}}/build
           mkdir -p ${HOME}/artifacts/qbrainwave
           wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
           chmod +x linuxdeploy*.AppImage
           ./linuxdeploy-x86_64.AppImage \
                -e ${HOME}/qbrainwave-app/usr/bin/qbrainwave \
                -i ${{github.workspace}}/desktop/qbrainwave-icon.svg \
                -d ${{github.workspace}}/desktop/qbrainwave.desktop \
                --output appimage \
                --appdir ${HOME}/qbrainwave-app/ 
            echo ":: Copy :rocket: ::"    
            cp -v qbrainwave*.AppImage ${HOME}/artifacts/ || echo "FAILED"

#    - name: Add timestamp
#      run: |
#           cd ~/artifacts
#           TIME=$(date +%Y%m%d-%H%M%S)
#           echo "TIME=$TIME" >> $GITHUB_ENV
#           mv qbrainwave*.AppImage qbrainwave-${TIME}.AppImage
    
    - name: Upload qbrainwave-linux
      uses: actions/upload-artifact@v3.0.0
      with:
        name: qbrainwave-linux-${{ env.TIME }}
        path: ${{ env.HOME }}/artifacts
        

