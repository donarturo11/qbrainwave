name: Build MacOS Monterey

on:
  push:
    branches:
       - main
       - ci-macos
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release


jobs:
  build-macos:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-11

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
           brew install tree cmake extra-cmake-modules

    - name: Install QT 6 x86_64
      run: |
           brew install qt@6
    - name: Install QT 6 ARM64
      run: |
           brew fetch --force --bottle-tag=arm64_monterey --deps qt@6
           mkdir ~/brew-arm64
           for i in $(brew --cache)/downloads/*arm64*; do tar -xvzf $i -C ~/brew-arm64; done
           ls -lah ~/brew-arm64
           ls -lah ~/brew-arm64/qt* || echo "FAIL"
           
    - name: Configure CMake x86_64
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
           cmake -B ${{github.workspace}}/build-x86_64 \
                 -DQt6_DIR=$(brew --prefix qt6)/lib/cmake/Qt6 \
                 -DCMAKE_INSTALL_PREFIX=qbrainwave.app \
                 -DCMAKE_OSX_ARCHITECTURES="x86_64" \
                 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 
      
      - name: Configure CMake ARM
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
           cmake -B ${{github.workspace}}/build-arm64 \
                 -DQt5_DIR=~/brew-arm64/Qt@6/*/lib/cmake/Qt6 \
                 -DAUTOMOC_EXECUTABLE=$(brew --prefix qt6)/bin/moc \
                 -DCMAKE_INSTALL_PREFIX=tuningTrainer.app \
                 -DCMAKE_OSX_ARCHITECTURES="arm64" \
                 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} || echo "CMake ARM64 failed"
    
    - name: Build x86_64
      # Build your program with the given configuration
      run: |
           echo "Github workspace=${{github.workspace}}"
           echo "PWD=${PWD}"
           cd ${{github.workspace}}/build-x86_64
           make

    - name: Build ARM
      # Build your program with the given configuration
      run: |
           echo "Github workspace=${{github.workspace}}"
           echo "PWD=${PWD}"
           cd ${{github.workspace}}/build-arm64
           make
    
    - name: Build Package
      run: |
           cd ${{github.workspace}}/build-x86_64
           $(brew --prefix qt6)/bin/macdeployqt qbrainwave.app || echo "Macdeploy FAILED"
           tree --charset ascii .
           
    - name: Prepare Artifact
      run: |
           cd ${{github.workspace}}/build
           if [[ -x artifacts ]]; then 
           rmdir -Rf artifacts
           fi
           mkdir artifacts
           cp -Rv qbrainwave.app artifacts/qbrainwave.app


    - name: Upload tuningTrainer-mac
      uses: actions/upload-artifact@v3.0.0
      with:
        name: qbrainwave-macos
        path: ${{github.workspace}}/build/artifacts
        
