name: Build MacOS Monterey

on:
  push:
    branches:
       - main
       - ci-macos
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release


jobs:
  build-macos:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-12

    steps:
    - uses: actions/checkout@v3
    
    - name: Hombrew configuration
      run: |
           git clone -q https://github.com/Homebrew/brew ~/homebrew
           eval "$(~/homebrew/bin/brew shellenv)"
           brew update --force --quiet
    
    - name: Fetch dependencies
      run: |
           mkdir download
           cd download
           wget -q https://freeshell.de/~arturwro/downloads/brew-monterey-universal.tar.gz
           tar -xzf brew-monterey-universal.tar.gz -C ~
    
    - name: Create links
      run: |    
           eval "$(~/homebrew/bin/brew shellenv)"
           BREWOPT=$(brew --prefix)/opt
           echo $BREWOPT
           echo $(brew shellenv)
           cd ~/brew-monterey-universal
           ls -lah
           for i in *
           do
           ln -fvs "${i}" "${BREWOPT}/$i"
           done
           
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
           eval "$(~/homebrew/bin/brew shellenv)"
           echo $(brew --prefix qt@6)
           QT6_PREFIX=$(cd ~/brew-monterey-universal/qt/6*; pwd)
           echo "QT6_PREFIX=${QT6_PREFIX}"
           cmake -B ${{github.workspace}}/build \
                 -DCMAKE_PREFIX_PATH="${QT6_PREFIX}" \
                 -DQt_PATH="${QT6_PREFIX}/lib/cmake/Qt6/" \
                 -DCMAKE_INSTALL_PREFIX=qbrainwave.app \
                 -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" \
                 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 
          
    - name: Build
      # Build your program with the given configuration
      run: |
           eval "$(~/homebrew/bin/brew shellenv)"
           echo "Github workspace=${{github.workspace}}"
           echo "PWD=${PWD}"
           cd ${{github.workspace}}/build
           make

    - name: Build Package
      run: |
           eval "$(~/homebrew/bin/brew shellenv)"
           cd ${{github.workspace}}/build
           macdeployqt qbrainwave.app || echo "Macdeploy FAILED"
           file qbrainwave/Contents/MacOS/qbrainwave || echo "No such file"
           
    - name: Prepare Artifact
      run: |
           cd ${{github.workspace}}/build
           if [[ -x artifacts ]]; then 
           rmdir -Rf artifacts
           fi
           mkdir artifacts
           cp -Rv qbrainwave.app artifacts/qbrainwave.app


    - name: Upload tuningTrainer-mac
      uses: actions/upload-artifact@v3.0.0
      with:
        name: qbrainwave-macos-universal
        path: ${{github.workspace}}/build/artifacts
        
