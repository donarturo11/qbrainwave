name: Build MacOS Monterey

on:
  push:
    branches:
       - main
       - ci-macos
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release


jobs:
  build-macos:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-12

    steps:
    - uses: actions/checkout@v3
    - name: Fetch dependencies
      run: |
           rm -Rf $(brew --cache)/*
           mkdir -p ~/brew-mod/{x86_64,arm64}
           echo "Fetching for x86_64"
           brew fetch -q --force --bottle-tag=monterey --deps qt@6
           for i in $(brew --cache)/downloads/*.tar.gz
           do 
           tar -xzf $i -C ~/brew-mod/x86_64
           rm $i
           done
           echo "Fetching for arm64"
           brew fetch -q --force --bottle-tag=arm64_monterey --deps qt@6
           for i in $(brew --cache)/downloads/*.tar.gz
           do 
           tar -xzf $i -C ~/brew-mod/arm64
           rm $i
           done
           
    - name: Check files
      run: |
           mkdir ~/diagnostic-artifacts
           find ~/brew-mod/ > ~/diagnostic-artifacts/brew-mod-contents.txt
    
    - name: Upload diagnostics
      uses: actions/upload-artifact@v3.0.0
      with:
        name: qbrainwave-macos-diagnostics
        path: ~/diagnostic-artifacts/
        
    - name: Create universal
      run: |
           cd ~/brew-mod
           ${{github.workspace}}/scripts/ci/macos/convert_to_universal.sh ${PWD}
           
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
           QT6_PREFIX=$(cd ~/brew-mod/universal/qt/6*; pwd)
           echo "QT6_PREFIX=${QT6_PREFIX}"
           cmake -B ${{github.workspace}}/build \
                 -DCMAKE_PREFIX_PATH="${QT6_PREFIX} \
                 -DCMAKE_INSTALL_PREFIX=qbrainwave.app \
                 -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" \
                 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 
          
    - name: Build
      # Build your program with the given configuration
      run: |
           echo "Github workspace=${{github.workspace}}"
           echo "PWD=${PWD}"
           cd ${{github.workspace}}/build
           make

    - name: Build Package
      run: |
           cd ${{github.workspace}}/build
           $(find ~/brew-mod/universal -iname macdeployqt) qbrainwave.app || echo "Macdeploy FAILED"
           file qbrainwave/Contents/MacOS/qbrainwave || echo "No such file"
           
    - name: Prepare Artifact
      run: |
           cd ${{github.workspace}}/build
           if [[ -x artifacts ]]; then 
           rmdir -Rf artifacts
           fi
           mkdir artifacts
           cp -Rv qbrainwave.app artifacts/qbrainwave.app


    - name: Upload tuningTrainer-mac
      uses: actions/upload-artifact@v3.0.0
      with:
        name: qbrainwave-macos-universal
        path: ${{github.workspace}}/build/artifacts
        
