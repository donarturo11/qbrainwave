name: Build MacOS

on:
  push:
    branches:
       - main
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  TIME: 00000000-000000

jobs:
  build-macos:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-12

    steps:
    - uses: actions/checkout@v3

      
    - name: Prepare environment
      run: |
           if [[ -x ~/artifacts ]]; then 
           rmdir -Rf ~/artifacts
           fi
           mkdir ~/artifacts
    
    - name: Install QT
      run: |
           pip3 install aqtinstall
           aqt install-qt -O ~/Qt mac desktop 6.4.0
           aqt install-qt -O ~/Qt mac desktop 6.4.0 -m qtconnectivity
           
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
           ~/Qt/6.4.0/macos/bin/qt-cmake -B ${{github.workspace}}/build \
                 -DCMAKE_INSTALL_PREFIX=qbrainwave.app \
                 -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" \
                 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} 
          
    - name: Build
      # Build your program with the given configuration
      run: |
           cd ${{github.workspace}}/build
           make

    - name: Build Package
      run: |
           cd ${{github.workspace}}/build
           ~/Qt/6.4.0/macos/bin/macdeployqt qbrainwave.app || echo "Macdeploy FAILED"
           file qbrainwave/Contents/MacOS/qbrainwave || echo "No such file"
           codesign -dv --verbose=4 qbrainwave.app || echo "Codesign FAILED"
           
    - name: Prepare Artifact
      run: |
           cd ${{github.workspace}}/build
           cp -Rv qbrainwave.app ~/artifacts/qbrainwave.app

    - name: Add timestamp
      run: |
           cd ~/artifacts
           TIME=$(date +%Y%m%d-%H%M%S)
           echo "TIME=$TIME" >> $GITHUB_ENV
           mv qbrainwave.app qbrainwave-${TIME}.app

    - name: Upload tuningTrainer-mac
      uses: actions/upload-artifact@v3.0.0
      with:
        name: qbrainwave-macos-universal-${{ env.TIME }}
        path: ~/artifacts
